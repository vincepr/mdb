use std::{env::args, process::exit};

use crate::summary::{walk_dir, write_summary};

mod summary;

const help_txt : &str = 
"autobook PATH [--filenames]
PATH \t\t- filepath to src directory that includes SUMMARY.md
--filenames\t- (optional) will use file/folder names instead of h1-markdown tags";

fn main() {
    let (path, use_header) = parse_args();
    let entries = walk_dir(path.clone(), 0, use_header);
    write_summary(entries, &path);
    
    println!("Successfully autogenerated: {}SUMMARY.md", path);
    exit(0);
}

fn parse_args() -> (String, bool) {
    let mut use_header: bool = true;

    let mut path = args().nth(1).expect(&("Error: No path provided\n".to_string()+help_txt));
    if let Some(option) = args().nth(2){
        if option == "--filenames"{
            use_header = false;
        } else {
            helptext_exit();
        }
    }

    if !path.ends_with("/") {
        path.push_str("/");
    }
    (path, use_header)
}

fn helptext_exit() {
    println!("{}", help_txt);
    exit(1);
}